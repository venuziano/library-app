---
name: library-api-ci

concurrency:
  group: deploy-api
  cancel-in-progress: true

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 5 * * 1' # Run CI Every Monday at 5am UTC

jobs:
  build-and-generate-k8s:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: >-
            ${{ secrets.DOCKER_HUB_USERNAME }}/library-api:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/library-api:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/library-api:buildcache,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig \
            --region ${{ secrets.AWS_REGION }} \
            --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Create config.env from static values
        run: |
          cat <<EOF > config.env
          API_PORT=${{ secrets.API_PORT }}
          HOST=${{ secrets.HOST }}
          GRAPHQL_PLAYGROUND=${{ secrets.GRAPHQL_PLAYGROUND }}
          NODE_ENV=${{ secrets.NODE_ENV }}

          DATABASE=${{ secrets.DATABASE }}
          PG_TYPE=${{ secrets.PG_TYPE }}
          PG_PORT=${{ secrets.PG_PORT }}

          REDIS_URL=${{ secrets.REDIS_URL }}
          REDIS_HOST=${{ secrets.REDIS_HOST }}
          REDIS_PORT=${{ secrets.REDIS_PORT }}
          CACHE_TTL_L1=${{ secrets.CACHE_TTL_L1 }}
          CACHE_TTL_L2=${{ secrets.CACHE_TTL_L2 }}

          BB_USER=${{ secrets.BB_USER }}

          JWT_EXPIRES_IN=${{ secrets.JWT_EXPIRES_IN }}

          MAIL_HOST=${{ secrets.MAIL_HOST }}
          MAIL_PORT=${{ secrets.MAIL_PORT }}
          MAIL_SECURE=${{ secrets.MAIL_SECURE }}
          MAIL_USER=${{ secrets.MAIL_USER }}
          EOF

      - name: Create secret.env from GitHub secrets
        run: |
          cat <<EOF > secret.env
          DB_USER=${{ secrets.DB_USER }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          BB_PASS=${{ secrets.BB_PASS }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}
          EOF

      - name: Generate ConfigMap YAML
        run: |
          kubectl create configmap library-api-config \
            --from-env-file=config.env \
            --dry-run=client \
            -o yaml > src/infrastructure/cloud/k8s/configmap.yaml

      - name: Generate Secret YAML
        run: |
          kubectl create secret generic library-api-secret \
            --from-env-file=secret.env \
            --type=Opaque \
            --dry-run=client \
            -o yaml > src/infrastructure/cloud/k8s/secret.yaml

      - name: Render Deployment manifest
        run: |
          sed "s|__IMAGE__|${{ secrets.DOCKER_HUB_USERNAME }}/library-api:${{ github.sha }}|" \
            src/infrastructure/cloud/k8s/deployment.template.yaml \
            > src/infrastructure/cloud/k8s/deployment.yaml

      - name: Deploy to EKS
        run: |
          kubectl apply -f src/infrastructure/cloud/k8s/configmap.yaml \
                         -f src/infrastructure/cloud/k8s/secret.yaml \
                         -f src/infrastructure/cloud/k8s/deployment.yaml
