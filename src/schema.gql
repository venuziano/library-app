# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type PageInfoGQL {
  totalItems: Int!
  totalPages: Int!
  currentPage: Int!
}

type AuthorGQL {
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  id: ID!
  firstname: String!
  lastname: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type CategoryGQL {
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  id: ID!
  name: String!
}

type BookGQL {
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  id: ID!
  title: String!
  publisher: String
  publicationDate: DateTime
  pageCount: Int
  categories: [CategoryGQL!]!
  authors: [AuthorGQL!]!
}

type PaginatedBooksGQL {
  items: [BookGQL!]!
  pageInfo: PageInfoGQL!
}

type Query {
  getAllBooks(limit: Int! = 50, page: Int! = 0, sort: String! = "createdAt", searchTerm: String, order: SortOrder! = DESC): PaginatedBooksGQL!
  getBookById(id: ID!): BookGQL
}

"""Sort direction (ascending or descending)"""
enum SortOrder {
  ASC
  DESC
}

type Mutation {
  createBook(input: CreateBookInput!): BookGQL!
  updateBook(input: UpdateBookInput!): BookGQL!
  patchBook(input: PatchBookInput!): BookGQL!
  deleteBook(id: Int!): BookGQL!
}

input CreateBookInput {
  title: String!
  publisher: String
  publicationDate: DateTime
  pageCount: Int
  categoryIds: [Int!]!
  authorIds: [Int!]!
}

input UpdateBookInput {
  title: String!
  publisher: String
  publicationDate: DateTime
  pageCount: Int
  categoryIds: [Int!]!
  authorIds: [Int!]!
  id: Int!
}

input PatchBookInput {
  title: String
  publisher: String
  publicationDate: DateTime
  pageCount: Int
  categoryIds: [Int!]
  authorIds: [Int!]
  id: Int!
}