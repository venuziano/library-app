# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type PageInfoGQL {
  totalItems: Int!
  totalPages: Int!
  currentPage: Int!
}

type UserGQL {
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  id: ID!
  username: String!
  password: String!
  firstname: String
  lastname: String
  email: String!
  stripeCustomerId: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type PaginatedUsersGQL {
  items: [UserGQL!]!
  pageInfo: PageInfoGQL!
}

type Query {
  getAllUsers(limit: Int! = 50, page: Int! = 0, sort: String! = "createdAt", searchTerm: String, order: SortOrder! = DESC): PaginatedUsersGQL!
  getUserById(id: ID!): UserGQL
}

"""Sort direction (ascending or descending)"""
enum SortOrder {
  ASC
  DESC
}

type Mutation {
  createUser(input: CreateUserInput!): UserGQL!
  updateUser(input: UpdateUserInput!): UserGQL!
  patchUser(input: PatchUserInput!): UserGQL!
  deleteUser(id: Int!): UserGQL!
}

input CreateUserInput {
  username: String!
  password: String!
  firstname: String
  lastname: String
  email: String!
  stripeCustomerId: String
}

input UpdateUserInput {
  username: String!
  password: String!
  firstname: String
  lastname: String
  email: String!
  stripeCustomerId: String
  id: Int!
}

input PatchUserInput {
  username: String
  password: String
  firstname: String
  lastname: String
  email: String
  stripeCustomerId: String
  id: Int!
}